/* @autor: Lorenzi Flavio

C# Unity configuration objects in the scene

==============================================================================================================================
Copyrights 2019 Konica Minolta Laboratory Europe (KMLE)

All rights reserved

==============================================================================================================================

*/

using System.Collections;
using System.Collections.Generic;
using UnityEngine;


public class configObjects : MonoBehaviour
{
	
	int selectScene;
	


	
	//FIRST SCENE -> HANDS UP: the animation is not imported here
	GameObject drawingun;
	GameObject man1;
	GameObject man1b; 
	GameObject hat1;
	int hat_random;
	int weapon_random;

    GameObject man1leftarm; 
    GameObject man1rightarm;
    GameObject man1bleftarm; 
    GameObject man1brightarm;

    Vector3 man1_pose;
    float random_velocity; 
    
    Vector3 drawingun_pose;



	//SECOND SCENE -> MAN DOWN
	GameObject gunplay;
	GameObject man2;
	GameObject man3;
    GameObject man3b;
	float gunplay_rotY; //shooting rotation randomized



    //THIRD SCENE -> WAVING HANDS
    GameObject praying;
    GameObject waving1;
    GameObject waving2;
    GameObject knife;
    GameObject knife2;
    GameObject kick;
    GameObject crouched;
    



    ///////////////////////////////////////////////////
    //For each scene: importing objects and variables//
    ///////////////////////////////////////////////////
	int randomnumber;
	int randomnumber_two;

    int randompickcolor;  

    int randompickCamera;

	GameObject camera;
	//random numbers for camera transformations:
	float cam_posX_first;
	float cam_rotX_first;
	float cam_posX_second;
	float cam_rotX_second;
	float cam_rotY_second;
	float cam_posX_third;
	float cam_rotX_third;
	float cam_rotY_third;
    float cam_posX_fourth;
    float cam_rotX_fourth;
    float cam_rotY_fourth;


    //Directional Light (fixed rotation) and Directional Light 2 (with random rotation)
    GameObject dirLight;
    GameObject dirLight2;
    float dl2_rotX; 
    float dl2_rotY;
	

    // All other objects, animals, people in the scene:
	GameObject building;
	float build_posX;
	float build_posY; //fixed
	float build_posZ;
	float build_rotY;

    GameObject building2;
    float build2_scaleX;
    float build2_scaleY;
    float build2_scaleZ;

	GameObject building3;
	float build3_posX;
	float build3_posY; //fixed
	float build3_posZ;
	float build3_rotY;

	GameObject car;
	float car_posX;
	float car_posY; //fixed
	float car_posZ;
	float car_rotY;
	public Material[] mat_car;

	GameObject drone;
	float drone_posX;
	float drone_posY; //fixed
	float drone_posZ;
	float drone_rotY;
	
	GameObject woman1;
    GameObject woman2;

	GameObject tower;
	float tower_scalez;

	GameObject plant;
    GameObject wolf;
    GameObject car2;

    GameObject car3;
    GameObject boat;
    GameObject airplane;

    GameObject runaway;
    GameObject runaway2;

    GameObject bat1;
    GameObject mp5k;

    GameObject train1;
    float train_scaleX;
    float train_scaleY;
    float train_scaleZ;

    GameObject r2d2;
    GameObject bb8;
    GameObject xwing;
    GameObject playground;
    GameObject swing;
    GameObject parkbank;
    GameObject parkbank2;
    GameObject lightpole;



    // floor
	GameObject plane; 
	public Material[] mat_plane;
	




    /* Start method is called before the first frame update */
    void Start()
    {
       

        selectScene = 2;	// SELECT THE SCENE 

        /*if(selectScene == 1)
        Debug.Log("Hands Up scene");
        if(selectScene == 2)
        Debug.Log("Man Down scene");
        if(selectScene == 3)
        Debug.Log("Waving Hands scene");*/


    	
    	//First scene: HANDS UP
    	man1 = GameObject.Find("man1");
    	man1b = GameObject.Find("man1b");
        drawingun = GameObject.Find("drawingGun");
    	
    	hat1 = GameObject.Find("hat1");
    	hat_random = Random.Range(1,3);
    	weapon_random = Random.Range(1,3);
        random_velocity = Random.Range(0.79f,1.1f);   //velocity of hands up for man1

        man1leftarm = GameObject.Find("rp_nathan_animated_003_walking_upperarm_l");
        man1rightarm = GameObject.Find("rp_nathan_animated_003_walking_upperarm_r");
        man1bleftarm = GameObject.Find("mixamorig2:LeftShoulder");
        man1brightarm = GameObject.Find("mixamorig2:RightShoulder");

       

    	//SECOND SCENE: MAN DOWN
    	gunplay = GameObject.Find("Gunplay");
        man2 = GameObject.Find("man2");
        man3 = GameObject.Find("man3");
        man3b = GameObject.Find("man3b");
   


        //THIRD SCENE: WAVING HANDS
        praying = GameObject.Find("praying");
        waving1 = GameObject.Find("waving1");
        waving2 = GameObject.Find("waving2");
        knife = GameObject.Find("knife");
        knife2 = GameObject.Find("knife2");
        kick = GameObject.Find("kick");
        crouched = GameObject.Find("crouched");





    	////////////////////////////////////////////
    	/////////RANDOM POSITION OF OBJECTS/////////
    	////////////////////////////////////////////
	//
    	//-------> HIDDEN CODE here for KMLE rights
	//

       


        //APPLY RANDOMIZATIONS by random picking:

    	//-------> HIDDEN CODE here for KMLE rights	







        ///////////////////////
        //SCENE CONFIGURATION//
        /////////////////7/////

        //HANDS UP: delete all but man1, man1b and drawing gun
        if(selectScene == 1){ 
            
            Destroy(man2);
            Destroy(man3);
            Destroy(man3b);
            Destroy(gunplay);
            Destroy(praying);
	    //-------> HIDDEN CODE here for KMLE rights
            //-------> HIDDEN CODE here for KMLE rights
	    
	    //-------> HIDDEN CODE here for KMLE rights
            }
            
        }
        
    }


    /* Update method is called once per frame */
    void Update()
    {

    	
    	//HANDS UP
        if(drawingun != null){
            drawingun_pose = drawingun.transform.position;
        
            if(drawingun_pose[0] > 0.5){

                //-------> HIDDEN CODE here for KMLE rights
                }         
            }
        }

    	//MAN DOWN
    	//-------> HIDDEN CODE here for KMLE rights



		
        //CAMERA random update
    	if(randompickCamera == 0){
        	//-------> HIDDEN CODE here for KMLE rights
    	}
    	else if(randompickCamera == 1){
    		//-------> HIDDEN CODE here for KMLE rights
    	}
    	else if(randompickCamera == 2){
    		//-------> HIDDEN CODE here for KMLE rights
    	




       //-------> HIDDEN CODE here for KMLE rights
		//-------> HIDDEN CODE here for KMLE rights
    	}

    }
}
